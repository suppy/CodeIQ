------------------------------@@@@@@@@@@@@@@@@@@@@@@---------
----------------------------@@@--------------------@@@-------
-----------------------@@@@@@-------@@@@@@@@@@-------@@@-----
---------------@@@@@@@@--@@@-----@@@@--------@@@@------@@----
-----------@@@@----------@-----@@@--------------@@@-----@@---
---------@@@------------@------@------@@@@@@------@@-----@@--
-------@@@--------------@-----@-----@@@----@@@-----@@-----@--
------@@-------@@@@@----@-----@-----@--------@@-----@-----@--
-----@@------@@@@-------@-----@-----@@@@@-----@-----@-----@--
----@@-------@@@@@------@@-----@-------------@@-----@-----@--
---@@--------@@@@@-------@------@@----------@@-----@@-----@--
---@----------@@@---------@------@@@@@@@@@@@@-----@@-----@@--
---@-----------------------@@-------------------@@@-----@@---
---@------------------------@@@@--------------@@@------@@----
---@@--------------------------@@@@@@----@@@@@@-------@@-----


-- 正解です！ 秘宝を入手しました！ --

経過時間 27.142 sec

確認回数 1 回

// ANSWER_START
[2, 1, 0, 0, 2]
// ANSWER_END

// CODE_START
(function () { 
    // 変数の初期化 
    var txtW = 61; 
    var txtH = 15; 
 
    // 配列の中身を-で初期化 
    var arr = []; 
    var sz = txtW * txtH; 
    for (var i = 0; i < sz; i ++) {arr[i] = "-";} 
 
    // らせんの描画 
    var sprl = function(x, y, rt, cnt) { 
        for (var i = 0; i < cnt; i ++) { 
            var t = i / 180 * Math.PI;    // 円周率をかける 
 
            // アルキメデスのらせん 
            var x2 = (rt * 2 * t * Math.cos(t) + x) | 0; 
            var y2 = (rt     * t * Math.sin(t) + y) | 0; 
 
            // x2, y2が、0以上、文字幅未満に収まるか確認 
            if (x2 < 0 || txtW <= x2 
             || y2 < 0 || txtH <= y2) { 
                // 収まらない場合は処理を飛ばしてループに戻る 
                continue; 
            } 
            arr[x2 + y2 * txtW] = "@"; 
        } 
    }; 
 
    // 図形の描画 
    sprl(40,  8, 0.5, 1122); 
    sprl(20, 15, 2.5,  288); 
    sprl(15, 10, 0.1,  822); 
    sprl(17, 10, 0.5,  300); 
 
    // 文字列の整形 
    var re = new RegExp("(.{" + txtW + "})", "g"); 
    var res = arr.join("").replace(re, "$1\n"); 
 
    // 戻り値を戻して終了 
    return res; 
})(); 
// CODE_END

// {{2015/2/18 9:35:23}}