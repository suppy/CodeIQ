############################-----############################
############################-----############################
#######################---------------#######################
####################---------------------####################
##################----######-----######----##################
#################-##########-----##########-#################
############################-----############################
############################-----############################
############################-----############################
############################-----############################
############################-----############################
############################-----############################
####################---------------------####################
################-----------------------------################
#############-----------------------------------#############


-- 正解です！ 秘宝を入手しました！ --

経過時間 72.462 sec

確認回数 2 回

// ANSER_START
[1, 2, 0, 2]
// ANSER_END

// CODE_START
(function () { 
    // 変数の初期化 
    var arr = []; 
    var txtLen  = 61; 
    var txtLine = 15; 
    var w = (txtLen  - 1) / 2; 
    var h = (txtLine - 1) / 2; 
 
    // 2乗（square）の関数 
    var sqr = function(n) { 
        return Math.pow(n, 2); 
    } 
 
    // 図形の描画 
    for (var i = 0; i < txtLine; i ++) { 
        for (var j = 0; j < txtLen; j ++) { 
            // 座標の計算 
            var x = (j - w) / 2; 
            var y = (i - h); 
            var pos = j + i * txtLen; 
 
            // sword 
            // 絶対値が1以下 
            var swrd = Math.abs(x) <= 1; 
 
            // guard 
            // 1つ目の円を、2つ目の円で切り抜き 
            var grd =(sqr(x) + sqr(y - 2) <= 64) 
                 && !(sqr(x) + sqr(y - 6) <= 100); 
 
            // stone 
            // 円の内側 
            var stn = (sqr(x) + sqr(y - 18) <= 196); 
 
            // 図形の描画（いずれかがtrueの場合） 
            if (swrd | grd | stn) { 
                arr[pos] = "-";    // グラフの内側 
            } else { 
                arr[pos] = "#";    // グラフの外側 
            } 
        } 
    } 
 
    // 文字列の整形 
    var re = new RegExp("(.{" + txtLen + "})", "g"); 
    var res = arr.join("").replace(re, "$1\n"); 
 
    // 戻り値を戻して終了 
    return res; 
})(); 
// CODE_END

// {{2015/1/29 9:47:20}}