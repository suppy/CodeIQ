【解答】
・第１問：4938　
・第２問：164293127179　
【方針】

まず、n=2^k（k>=0，kは整数）の場合を考える。

例えば、n=16 のときは、

 0:00000
 1:00001
 2:00010
 3:00011
 4:00100
 5:00101
 6:00110
 7:00111
 8:01000
 9:01001
10:01010
11:01011
12:01100
13:01101
14:01110
15:01111
16:10000

半角スペースで区切ると
 0:0 0 000
 1:0 0 001
 2:0 0 010
 3:0 0 011
 4:0 0 100
 5:0 0 101
 6:0 0 110
 7:0 0 111

 8:0 1 000
 9:0 1 001
10:0 1 010
11:0 1 011
12:0 1 100
13:0 1 101
14:0 1 110
15:0 1 111

16:1 0 000


n=15のときは、n=7のときの下3桁のパターンが2回あり、
また、8～15までは、最上位桁の1が8個あるので、
以下の様な漸化式が得られる

F(15) = F(7) * 2 + 8

8，16は、1が1個なので、以下のように変形できる。

F(16) = (F(8) - 1) * 2 + 8 + 1
      = 2 * F(8) + 8 - 1

これを一般化すると


F(2^k) = 2 * F(2^(k - 1)) + 2^(k - 1) - 1

また、
F(0) = 0
F(1) = 1
である。


次に、n=2^k+m（k>=0，2^k>m，k，mは整数）の場合を考える。

例えば、n=21 のときは、

 0:0 0 000
 1:0 0 001
 2:0 0 010
 3:0 0 011
 4:0 0 100
 5:0 0 101
 6:0 0 110
 7:0 0 111

 8:0 1 000
 9:0 1 001
10:0 1 010
11:0 1 011
12:0 1 100
13:0 1 101
14:0 1 110
15:0 1 111

16:1 0 000
17:1 0 001
18:1 0 010
19:1 0 011
20:1 0 100
21:1 0 101

F(21)は、F(15)と、16～21の下4桁の1の数F(5)、16～21の最上位桁の1の数6の和となる。
漸化式では
F(21) = F(15) + F(5) + 6
F(16 + 5) = (F(16) - 1) + F(5) + 5 + 1
          = F(16) + F(5) + 5

これを一般化すると、
F(n) = F(2^k + m)
     = F(2^k) + F(m) + m


よって、F(n)は、

F(0) = 0
F(1) = 1
F(n) = F(2^k) + F(m) + m (n=2^k+m（k>=0，2^k>m，k，mは整数）)
F(2^k) = 2 * F(2^(k - 1)) + 2^(k - 1) - 1

【言語】
Ruby

【コード】

@F = {}
def F(n)
  return 0 if n == 0
  return 1 if n == 1

  k = Math.log2(n).floor
  m = n - (2 ** k)

  if !@F.has_key?(2 ** k)
    @F[2 ** k] = 2 * F(2 ** (k - 1)) + 2 ** (k - 1) - 1
  end
  if !@F.has_key?(m)
    @F[m] = F(m)
  end
  return  @F[2 ** k] + @F[m] + m
end

puts F(10 ** 3)
puts F(10 ** 10)


http://ideone.com/Dt6SDx

