---------------------&@&@&@&@&@&@&@&@&@&---------------------
-----------------@&@&@&@&@&@&@&@&@&@&@&@&@&@-----------------
---------------&@&@&@&@&@&@&@&@&@&@&@&@&@&@&@&---------------
--------------&@&@&@&@&@&@&@&@&@&@&@&@&@&@&@&@&--------------
---------------&@&@&@&@&@&@&@&@&@&@&@&@&@&@&@&---------------
----------------&@&@&@&...............&@&@&@&----------------
----------------@&@&@&@...|.......|...@&@&@&@----------------
-----------------@&@&@....|.......|....@&@&@-----------------
----------------@&@&@&@...|.......|...@&@&@&@----------------
----------------&@&@&@&...............&@&@&@&----------------
---------------&@&@&@&@&...+++++++...&@&@&@&@&---------------
--------------&@&@&@&@&@&@.........@&@&@&@&@&@&--------------
---------------&@&@&@&@&@&@&@&.&@&@&@&@&@&@&@&---------------
-----------------@&@&@&@&@&@&@&@&@&@&@&@&@&@-----------------
---------------------&@&@&@&@&@&@&@&@&@&---------------------

-- 正解です！ 秘宝を入手しました！ --

経過時間 28.667 sec

確認回数 3 回

// ANSWER_START
[2, 2, 1, 0]
// ANSWER_END

// CODE_START
(function () { 
    // 変数の初期化 
    var txtW = 61; 
    var txtH = 15; 
    var arr = [];    // 配列を初期化 
 
    // 範囲を判定 
    var isIn = function(x, y, cx, cy, cw, ch) { 
        x -= cx; y -= cy; 
        return x * x / cw / cw + y * y / ch / ch <= 1; 
    }; 
 
    // 描画 
    for (var y = 0; y < txtH; y ++) { 
        for (var x = 0; x < txtW; x ++) { 
            var i = x + y * txtW; 
            arr[i] = "-"; 
 
            if (isIn(x, y, 30, 7, 20, 8) 
             && ! isIn(x, y, -2, 7, 18, 8)    // isInの否定 
             && ! isIn(x, y, 62, 7, 18, 8)) { // isInの否定 
                arr[i] = "@&"[i % 2]; 
            } 
            if (isIn(x, y, 30, 7, 8, 5) && y > 4) arr[i] = "."; 
            if (isIn(x, y, 34, 7, 0.5, 1)) arr[i] = "|"; 
            if (isIn(x, y, 26, 7, 0.5, 1)) arr[i] = "|"; 
            if (isIn(x, y, 30, 10, 3, 0.5)) arr[i] = "+"; 
        } 
    } 
 
    // 文字列の整形（全ての要素を処理して新しい配列を作成） 
    var res = arr.map(function(x, i, a) { 
        if (i != 0 && i % txtW == 0) { 
            x = "\n" + x; 
        } 
        return x; 
    }).join("");  // 配列の要素を空文字で結合 
 
    // 戻り値を戻して終了 
    return res; 
})(); 
// CODE_END

// {{2015/5/29 11:52:23}}