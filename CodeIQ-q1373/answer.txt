-------------------------------------------------------------
--------------------------000000000--------------------------
-------------------------11111111111-------------------------
-------------------------22222222222-------------------------
------------------------3333333333333------------------------
---------------------0000000000000000000---------------------
--------------------111111111111111111111--------------------
--------------------222222222222222222222--------------------
-------------------33333333333333333333333-------------------
----------------00000000000000000000000000000----------------
---------------1111111111111111111111111111111---------------
---------------2222222222222222222222222222222---------------
--------------333333333333333333333333333333333--------------
--------------444444444444444444444444444444444--------------
-------------55555555555555555555555555555555555-------------


-- 正解です！ 秘宝を入手しました！ --

経過時間 53.983 sec

確認回数 3 回

// ANSWER_START
[2, 0, 1, 2]
// ANSWER_END

// CODE_START
(function () { 
    // 変数の初期化 
    var txtW = 61; 
    var txtH = 15; 
 
    // 値埋め配列の作成 
    var setArray = function(len, p) { 
        return new Array(len + 1).join(p).split(""); 
    }; 
 
    // 配列の中身を-で初期化 
    var arr = setArray(txtW * txtH, "-"); 
 
    // 台形を描く関数（t, b は奇数とする） 
    var trapezoid = function(y, t, b, h) { 
        for (var i = 0; i < h; i ++) { 
            // 上辺と下辺の比率 
            var rt = i / (h - 1); 
 
            // 横の長さの計算 
            var dW = t * (1 - rt) + b * rt; 
            dW = dW | 0; // 整数に 
            if (dW % 2 == 0) {dW ++;} // 偶数なら奇数に 
 
            // 描画位置の計算 
            var x = (txtW - 1) / 2;         // X中心 
            var dPos = x + (y + i) * txtW;  // 描画中心 
            var strt = dPos - (dW - 1) / 2; // 置換開始 
 
            // 置換文字の作成 
            var rep = setArray(dW, i); 
 
            // 配列の置換 
            var arg = [strt, dW].concat(rep); 
            arr.splice.apply(arr, arg); 
        } 
    } 
 
    trapezoid( 1,  9, 13, 4); 
    trapezoid( 5, 19, 23, 4); 
    trapezoid( 9, 29, 35, 6); 
 
    // 文字列の整形 
    var s = "(.{" + txtW + "})"; 
    var re = new RegExp(s, "g");    // 正規表現 
    var res = arr.join("").replace(re, "$1\n"); 
 
    // 戻り値を戻して終了 
    return res; 
})(); 
// CODE_END

// {{2015/3/18 8:50:21}}