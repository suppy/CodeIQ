-------------------------------------------------------------
-----------------------0-0-0-0-0-0-0-0-----------------------
------------------------0---0---0---0------------------------
---------------------0-010-010-010-010-0---------------------
----------------------011-011101110-110----------------------
-------------------0-010-212-2-0-212-010-0-------------------
--------------------011-01110-2-01110-110--------------------
-----------------0--1--2-232--3--232-2--1--0-----------------
------------------011---233-23332-332---110------------------
---------------------2--3--4-4-4-4--3--2---------------------
----------------------233---4---4---332----------------------
-------------------------4--5---5--4-------------------------
--------------------------455---554--------------------------
-----------------------------6-6-----------------------------
------------------------------6------------------------------
------------------------------7------------------------------
------------------------------7------------------------------


-- 正解です！ 秘宝を入手しました！ --

経過時間 60.372 sec

確認回数 2 回

// ANSWER_START
[2, 1, 1, 1, 2, 0]
// ANSWER_END

// CODE_START
(function () { 
    // 変数の初期化 
    var txtW = 61; 
    var txtH = 17; 
 
    // 配列を初期化 
    for (var arr = [], i = txtW * txtH; i --;) { 
        arr[i] = "-"; 
    } 
 
    // 回転（マス目用） 
    var round = function(x, y, t) { 
        var x2 = x * Math.cos(t) - y * Math.sin(t); 
        var y2 = x * Math.sin(t) + y * Math.cos(t); 
        x2 = Math.round(x2);  // 四捨五入 
        y2 = Math.round(y2);  // 四捨五入 
        return {x: x2, y: y2}; 
    }; 
 
    // 木を描く 
    var tree = function(x, y, dX, dY, cnt) { 
        if (cnt < 0 || dY > 0) return; 
 
        for (var i = 0; i < 2; i ++) { 
            arr[x + y * txtW] = cnt; 
            x += dX; 
            y += dY; 
        } 
 
        var d1 = round(dX, dY, - Math.PI/4);  //  -45度回転 
        var d2 = round(dX, dY, Math.PI*0.25);  // 45度回転 
 
        tree(x, y, d1.x, d1.y, cnt - 1);  // 再帰 
        tree(x, y, d2.x, d2.y, cnt - 1);  // 再帰 
    }; 
    tree(txtW / 2 | 0, txtH - 1, 0, -1, 7); 
 
    // 文字列の整形 
    var re = new RegExp("(.{" + txtW + "})", "g"); 
    var res = arr.join("").replace(re, "$1\n"); 
 
    // 戻り値を戻して終了 
    return res; 
})(); 
// CODE_END

// {{2015/5/1 11:58:23}}