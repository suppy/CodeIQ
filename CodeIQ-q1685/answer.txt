------------------------------/------------------------------
-------------------------///////////-------------------------
------------------/----///////////////--/--------------------
-------------//////////////////////////////////--------------
-----------//////////////////////////////////////------------
----------////////////////////////////////////////-----------
-----///////////////////////////////////////////////////-----
---///////////////////////////////////////////////////////---
--/////////////////////////////////////////////////////////--
---///////////////////////////////////////////////////////---
-----///////////////////////////////////////////////////-----
-----------/------/////////////////////////----/-------------
---------------------///////////////////---------------------
------------------------------/------------------------------
-------------------------------------------------------------


-- 正解です！ 秘宝を入手しました！ --

経過時間 53.826 sec

確認回数 2 回

// ANSWER_START
[1, 2, 2, 1]
// ANSWER_END

// CODE_START
(function () { 
    // 変数の初期化 
    var txtW = 61, txtH = 15; 
    var arr = new Array(txtW * txtH + 1).join("-").split(""); 
 
    // 楕円描画 
    var rnd = function(x, y, w, h) { 
        for (var i = 0; i < txtW * txtH; i ++) { 
            var x2 = i % txtW - x; 
            var y2 = (i / txtW | 0) - y; 
            if (x2 * x2 / w / w + y2 * y2 / h / h <= 1) { 
                arr[i] = "/"; 
            } 
        } 
    }; 
 
    // 雲形描画 
    var s = "08031E09051E09052808051209080B0B082F0D0A1E"; 
    s.replace(/(..)(..)(..)/g, function() { 
        // 関数の引数 
        var a = arguments; 
 
        var arr = [3]; 
        for (var i = 1; i <= 3; i ++) { 
            // 16進数と解釈して整数化 
            var n = parseInt(a[i], 16); 
 
            // 配列の先頭に追加 
            arr.unshift(n); 
        } 
 
        // 引数を配列の形でrnd関数を実行 
        rnd.apply(null, arr); 
    }); 
 
    // 文字列の整形 
    var re = new RegExp("(.{" + txtW + "})", "g"); 
    var res = arr.join("").replace(re, "$1\n"); 
 
    // 戻り値を戻して終了 
    return res; 
})(); 
// CODE_END

// {{2015/7/3 14:43:29}}